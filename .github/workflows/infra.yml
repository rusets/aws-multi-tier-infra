name: infra

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform action"
        required: true
        type: choice
        default: apply
        options: [apply, destroy]
      auto_approve:
        description: "Apply/destroy without manual approval (CI-friendly)"
        required: true
        type: boolean
        default: true
      unlock_id:
        description: "(Optional) Stuck state lock ID for force-unlock"
        required: false
        type: string
        default: ""
  push:
    branches: [main]
    paths:
      - "**/*.tf"
      - ".github/workflows/infra.yml"

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  TF_IN_AUTOMATION: "1"

concurrency:
  group: infra-${{ github.ref }}
  cancel-in-progress: false

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform version
        run: terraform version

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/multi-tier-demo-github-tf
          role-session-name: gha-terraform
          role-duration-seconds: 3600
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform fmt (check)
        run: terraform fmt -check -recursive

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform validate
        run: terraform validate

      - name: Terraform force-unlock (optional)
        if: ${{ inputs.unlock_id != '' }}
        run: terraform force-unlock -force "${{ inputs.unlock_id }}" || true

      # ===================== APPLY =====================
      - name: Terraform plan (apply)
        if: ${{ inputs.action == 'apply' }}
        run: terraform plan -input=false -lock-timeout=5m -out=tfplan

      - name: Terraform apply saved plan
        if: ${{ inputs.action == 'apply' && inputs.auto_approve }}
        run: terraform apply -input=false -auto-approve -lock-timeout=5m tfplan

      # ==================== DESTROY ====================
      - name: Pre-destroy - drop CI roles from state
        if: ${{ inputs.action == 'destroy' }}
        shell: bash
        run: |
          set -euo pipefail
          terraform state rm aws_iam_role.github_tf || true
          terraform state rm aws_iam_role.github_app || true
          terraform state rm aws_iam_role_policy_attachment.tf_poweruser || true
          terraform state rm aws_iam_role_policy_attachment.tf_iam_extras_attach || true
          terraform state rm aws_iam_role_policy.github_app_artifacts_and_ssm || true
          terraform state rm aws_iam_role_policy.github_app_asg_refresh || true
          terraform state rm aws_iam_policy.tf_iam_extras || true
          terraform state rm aws_iam_policy.ec2_s3_read || true

      - name: Terraform plan (destroy)
        if: ${{ inputs.action == 'destroy' }}
        run: terraform plan -destroy -input=false -lock-timeout=5m -out=tfplan

      - name: Terraform destroy saved plan
        if: ${{ inputs.action == 'destroy' && inputs.auto_approve }}
        run: terraform apply -input=false -auto-approve -lock-timeout=5m tfplan