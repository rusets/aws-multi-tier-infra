name: infra

on:
  # Manual run with an input "action"
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform action"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy
  # (optional) Auto plan on PRs
  pull_request:
    branches: [ main ]
  # (optional) Auto apply on push to main
  push:
    branches: [ main ]

# Avoid concurrent runs that could fight for the state lock
concurrency:
  group: infra-${{ github.ref }}
  cancel-in-progress: false

# Required for AWS OIDC federation
permissions:
  id-token: write         # needed for aws-actions/configure-aws-credentials
  contents: read

env:
  AWS_REGION: us-east-1
  ROLE_ARN: arn:aws:iam::097635932419:role/multi-tier-demo-github-tf
  TF_IN_AUTOMATION: "true"

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform fmt (check)
        run: terraform fmt -check -recursive

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan (PR only)
        if: github.event_name == 'pull_request'
        run: terraform plan -input=false

      - name: Terraform apply (push main default)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && inputs.action == ''
        run: terraform apply -auto-approve -input=false

      - name: Terraform apply (manual)
        if: github.event_name == 'workflow_dispatch' && inputs.action == 'apply'
        run: terraform apply -auto-approve -input=false

      - name: Terraform destroy (manual)
        if: github.event_name == 'workflow_dispatch' && inputs.action == 'destroy'
        run: terraform destroy -auto-approve -input=false