name: infra

on:
  # Manual run with an input "action"
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform action"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy
  # (optional) Auto plan on PRs
  pull_request:
    branches: [ main ]
  # (optional) Auto apply on push to main
  push:
    branches: [ main ]

# Avoid concurrent runs that could fight for the state lock
concurrency:
  group: infra-${{ github.ref }}
  cancel-in-progress: false

# Required for AWS OIDC federation
permissions:
  id-token: write         # needed for aws-actions/configure-aws-credentials
  contents: read

env:
  AWS_REGION: us-east-1
  ROLE_ARN: arn:aws:iam::097635932419:role/multi-tier-demo-github-tf
  TF_IN_AUTOMATION: "true"

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

    name: infra

on:
  # Manual run with a dropdown to choose apply or destroy
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform action"
        required: true
        type: choice
        default: apply
        options: [apply, destroy]
      auto_approve:
        description: "Skip manual approval flag"
        required: true
        type: boolean
        default: true

# Required for GitHub OIDC -> AWS
permissions:
  id-token: write
  contents: read

# Global envs
env:
  AWS_REGION: us-east-1
  TF_IN_AUTOMATION: "1"

concurrency:
  # Avoid running two infra jobs at once
  group: infra-${{ github.ref }}
  cancel-in-progress: false

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # --- Checkout repo ---
      - name: Checkout
        uses: actions/checkout@v4

      # --- Setup Terraform ---
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

    name: infra

on:
  # Manual run with a dropdown to choose apply or destroy
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform action"
        required: true
        type: choice
        default: apply
        options: [apply, destroy]
      auto_approve:
        description: "Skip manual approval flag"
        required: true
        type: boolean
        default: true

# Required for GitHub OIDC -> AWS
permissions:
  id-token: write
  contents: read

# Global envs
env:
  AWS_REGION: us-east-1
  TF_IN_AUTOMATION: "1"

concurrency:
  # Avoid running two infra jobs at once
  group: infra-${{ github.ref }}
  cancel-in-progress: false

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # --- Checkout repo ---
      - name: Checkout
        uses: actions/checkout@v4

      # --- Setup Terraform ---
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      # --- Configure AWS via OIDC ---
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::097635932419:role/multi-tier-demo-github-tf
          aws-region: ${{ env.AWS_REGION }}

      # --- Lint/format check ---
      - name: Terraform fmt (check)
        run: terraform fmt -check -recursive

      # --- Init & validate ---
      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform validate
        run: terraform validate

      # --- Plan/Apply path ---
      - name: Terraform plan (apply)
        if: ${{ inputs.action == 'apply' }}
        run: terraform plan -input=false -out=tfplan

      - name: Terraform apply
        if: ${{ inputs.action == 'apply' && inputs.auto_approve }}
        run: terraform apply -input=false -auto-approve

      # --- Destroy path ---
      - name: Terraform plan (destroy)
        if: ${{ inputs.action == 'destroy' }}
        run: terraform plan -destroy -input=false -out=tfplan

      - name: Terraform destroy
        if: ${{ inputs.action == 'destroy' && inputs.auto_approve }}
        run: terraform destroy -input=false -auto-approve