name: infra

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform action"
        required: true
        type: choice
        default: apply
        options: [apply, destroy]
      auto_approve:
        description: "Apply/destroy without manual approval (CI-friendly)"
        required: true
        type: boolean
        default: true

permissions:
  id-token: write   # required for GitHub OIDC â†’ AWS
  contents: read

env:
  AWS_REGION: us-east-1
  TF_IN_AUTOMATION: "1"

concurrency:
  group: infra-${{ github.ref }}
  cancel-in-progress: false

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Install Terraform BEFORE any terraform commands
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          # terraform_version: 1.8.5  # optionally pin version

      - name: Terraform version
        run: terraform version

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/multi-tier-demo-github-tf
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform fmt (check)
        run: terraform fmt -check -recursive

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform validate
        run: terraform validate

      # ----- APPLY -----
      - name: Terraform plan (apply)
        if: ${{ inputs.action == 'apply' }}
        run: terraform plan -input=false -out=tfplan

      - name: Terraform apply saved plan
        if: ${{ inputs.action == 'apply' && inputs.auto_approve }}
        run: terraform apply -input=false -auto-approve tfplan

      # ----- DESTROY -----
      - name: Terraform plan (destroy)
        if: ${{ inputs.action == 'destroy' }}
        run: terraform plan -destroy -input=false -out=tfplan

      - name: Terraform destroy saved plan
        if: ${{ inputs.action == 'destroy' && inputs.auto_approve }}
        run: terraform apply -input=false -auto-approve tfplan